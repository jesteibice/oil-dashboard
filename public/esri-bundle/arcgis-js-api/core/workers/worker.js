var globalId=0,outgoing=new Map,configured=!1,HANDSHAKE=0,CONFIGURE=1,CONFIGURED=2,OPEN=3,OPENED=4,RESPONSE=5,INVOKE=6,ABORT=7;function mapDelete(e,r){e.delete(r)}function createAbortError(){var e=new Error("AbortError");return e.dojoType="cancel",e}function receiveMessage(e){return e&&e.data?"string"==typeof e.data?JSON.parse(e.data):e.data:null}function invokeStaticMessage(e,r,o){var t=o&&o.signal,a=require("dojo/Deferred"),n=globalId++,i=function(){var e=outgoing.get(n);e&&(mapDelete(outgoing,n),self.postMessage({type:ABORT,jobId:n}),e.reject(createAbortError()))},s=new a(i);if(t){if(t.aborted)return s.reject(createAbortError());t.addEventListener("abort",function(){i(),s.reject(createAbortError())})}return outgoing.set(n,s),self.postMessage({type:INVOKE,jobId:n,methodName:e,abortable:!0,data:r}),s.promise}function messageHandler(e){var r=receiveMessage(e);if(r){var t=r.jobId;switch(r.type){case CONFIGURE:var o=r.configure;if(configured)return;self.dojoConfig=o.loaderConfig,self.importScripts(o.loaderUrl),"function"==typeof require.config&&require.config(o.loaderConfig),require(["esri/config"],function(e){for(var r in o.esriConfig)Object.prototype.hasOwnProperty.call(o.esriConfig,r)&&(e[r]=o.esriConfig[r]);self.postMessage({type:CONFIGURED})});break;case OPEN:var a=r.modulePath;require(["esri/core/workers/RemoteClient",a],function(e,r){var o=e.connect(r);self.postMessage({type:OPENED,jobId:t,data:o},[o])});break;case RESPONSE:if(outgoing.has(t)){var n=outgoing.get(t);mapDelete(outgoing,t),r.error?n.reject(JSON.parse(r.error)):n.resolve(r.data)}}}}self.addEventListener("message",messageHandler),self.postMessage({type:HANDSHAKE});